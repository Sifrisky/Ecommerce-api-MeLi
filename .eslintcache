[{"D:\\HENRY\\ml-api\\src\\index.js":"1","D:\\HENRY\\ml-api\\src\\App.js":"2","D:\\HENRY\\ml-api\\src\\components\\productCard.js":"3","D:\\HENRY\\ml-api\\src\\components\\searchBar.js":"4","D:\\HENRY\\ml-api\\src\\components\\catalogo.js":"5","D:\\HENRY\\ml-api\\src\\components\\footer.js":"6"},{"size":199,"mtime":1610418763656,"results":"7","hashOfConfig":"8"},{"size":626,"mtime":1610594896110,"results":"9","hashOfConfig":"8"},{"size":1739,"mtime":1610591882187,"results":"10","hashOfConfig":"8"},{"size":1256,"mtime":1610591363804,"results":"11","hashOfConfig":"8"},{"size":977,"mtime":1610593080573,"results":"12","hashOfConfig":"8"},{"size":1598,"mtime":1610594849721,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1hmjrkk",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\HENRY\\ml-api\\src\\index.js",[],["30","31"],"D:\\HENRY\\ml-api\\src\\App.js",["32"],"D:\\HENRY\\ml-api\\src\\components\\productCard.js",["33"],"/* PRODUCT CARD\r\nEn este componente se muestra un producto en particular, debemos mostrar:\r\nsu imagen.\r\nsu titulo.\r\nsu precio (con la moneda).\r\nsu condicion.\r\nsi tiene stock o no.\r\n\r\nExtra-Credit: En cada request de búsqueda, se deberá crear un caché, de tal manera que a\r\nla siguiente búsqueda no se use la API de Mercado Libre, si no que los datos se recuperen\r\n del caché. Tip: Usar un objeto (cada propiedad es al término de búsqueda y el valor de esa \r\npropiedad el arreglo de resultados.)*/\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport styles from './product.module.css';\r\n\r\nexport default function ProductCard() {\r\n  const [product, setProduct] = useState(\"\");\r\n\r\n  const url = \"https://api.mercadolibre.com/sites/MLA/search?q=zapatilla\";\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${url}`)\r\n      .then((res) => {\r\n        //console.log(res);\r\n        setProduct(res.data.results);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n    {/*<div className=\"product\">\r\n        <div id=\"closeIcon\" className=\"row\">\r\n            <button onClick={() => onClose(id)} className=\"btn btn-sm btn-danger\">X</button>\r\n        </div>\r\n        <div className=\"product-body\">\r\n          <h5 className=\"product-title\">{name}</h5>\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-4 col-md-4 col-lg-4\">*/}\r\n      <div className={styles.product}>\r\n        {product &&\r\n          product.map((p) => (\r\n            <div id={p.id}>\r\n              <p>{p.title}</p>\r\n              <p>{p.price}</p>\r\n              <p>{p.stock}</p>\r\n              <img src={p.thumbnail}/>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n","D:\\HENRY\\ml-api\\src\\components\\searchBar.js",["34"],"/*Un formulario controlado con un input de búsque  que dispare los requests a la API \r\n(a nuestro BACK-END, no a Mercado Libre). */\r\n\r\nimport React, { useState } from \"react\";\r\nimport styles from \"./searchBar.module.css\";\r\n\r\nconst SearchBar = ({ onSearch, onClear }) => {\r\n  const [search, setSearch] = useState();\r\n\r\n  const handlerInput = (e) => {\r\n    setSearch(e.target.value);\r\n  };\r\n\r\n  const handlerSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSearch(search);\r\n    setSearch(\"\");\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className={styles.container}\r\n      onSubmit={handlerSubmit}\r\n      className=\"d-flex col-12 justify-content-center justify-content-lg-end\"\r\n    >\r\n      <div>\r\n        <input\r\n          onChange={handlerInput}\r\n          className=\"form-control mr-2\"\r\n          value={search}\r\n          type=\"text\"\r\n          placeholder=\"Buscar productos, marcas y más...\"\r\n          aria-label=\"Search\"\r\n        ></input>\r\n      </div>\r\n      <button className=\"btn btn-dark ml-2 mr-1\" type=\"submit\">\r\n        {\" \"}\r\n        Submit{\" \"}\r\n      </button>\r\n      {/* <button className=\"btn btn-dark my-sm-0\" type=\"button\" onClick={onClear} > Clear </button>*/}\r\n      <div />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n         ","D:\\HENRY\\ml-api\\src\\components\\catalogo.js",["35","36"],"/* CATALOGO.\r\nEste componente va mostrar un arreglo de productos (obtenidos de la API) usando Product Card. Tambien debe posibilitar:\r\nPoder ordenar los productos en base a su precio, de forma ascendete o descendente.\r\nPoder filtrar por condicion.\r\nPoder páginar los resultados de a 30 productos por página. */\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport ProductCard from \"./productCard.js\";\r\nimport styles from \"./catalogo.module.css\";\r\n\r\nconst Catalogo = () => {\r\n  const [product, setProduct] = useState([]);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {product &&\r\n        product.map((p) => (\r\n          <ProductCard\r\n            id={product.results.id}\r\n            title={p.results.title}\r\n            price={p.results.price}\r\n            stock={p.results.stock}\r\n            img={p.results.thumbnail}\r\n            onClose={() => alert(p.results.title)}\r\n          />\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Catalogo;\r\n","D:\\HENRY\\ml-api\\src\\components\\footer.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":2,"column":10,"nodeType":"43","messageId":"44","endLine":2,"endColumn":16},{"ruleId":"45","severity":1,"message":"46","line":51,"column":15,"nodeType":"47","endLine":51,"endColumn":39},{"ruleId":"48","severity":1,"message":"49","line":24,"column":7,"nodeType":"50","endLine":24,"endColumn":78},{"ruleId":"41","severity":1,"message":"51","line":7,"column":27,"nodeType":"43","messageId":"44","endLine":7,"endColumn":36},{"ruleId":"41","severity":1,"message":"52","line":12,"column":19,"nodeType":"43","messageId":"44","endLine":12,"endColumn":29},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'render' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useEffect' is defined but never used.","'setProduct' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]